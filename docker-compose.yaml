services:
  api_gateway:
    build:
      context: ./backend/services/api_gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - auth_service
      - user_service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  auth_service:
    build:
      context: ./backend/services/auth_service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db_auth:5432/db_auth
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${JWT_ACCESS_TOKEN_EXPIRE_MINUTES}
      JWT_REFRESH_TOKEN_EXPIRE_DAYS: ${JWT_REFRESH_TOKEN_EXPIRE_DAYS}
    depends_on:
      db_auth:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  user_service:
    build:
      context: ./backend/services/user_service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db_user:5432/db_user
    depends_on:
      db_user:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  post_service:
    build:
      context: ./backend/services/post_service
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      DATABASE_URL: postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db_post:5432/db_post
    depends_on:
      db_post:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db_user:
    image: postgres:16
    environment:
      POSTGRES_DB: db_user
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_user_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d db_user"]
      interval: 5s
      timeout: 5s
      retries: 5
  db_auth:
    image: postgres:16
    environment:
      POSTGRES_DB: db_auth
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - db_auth_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d db_auth"]
      interval: 5s
      timeout: 5s
      retries: 5
  db_post:
    image: postgres:16
    environment:
      POSTGRES_DB: db_post
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - db_post_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d db_post"]
      interval: 5s
      timeout: 5s
  redis_service:
    build:
      context: ./backend/services/redis_service
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    depends_on:
      - redis
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    

  file_service:
    build:
      context: ./backend/services/file_service
    ports:
      - "8005:8005"
    volumes:
      - ./uploads:/app/uploads
volumes:
  db_user_data:
  db_auth_data:
  db_post_data:
  redis_data:
  file_service_data: