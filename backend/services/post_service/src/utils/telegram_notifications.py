import httpx
import logging

TELEGRAM_BOT_TOKEN = "7668995111:AAFwYME1gQX6kd5kfsEKg4l0kYQt_iFQI-U"
TELEGRAM_CHAT_ID = "-4744201336"

logger = logging.getLogger(__name__)

async def send_post_notification(post_id: int, title: str, content: str, author_id: int):
    short_content = (content[:50] + "...") if len(content) > 50 else content
    url = f"https://—Ä—ã–±–æ–ª–æ–≤–Ω—ã–π-—Ñ–æ—Ä—É–º.—Ä—Ñ/post/{post_id}"
    message = (
        f"üí¨ *–ù–û–í–´–ô –ü–û–°–¢ –ù–ê –§–û–†–£–ú–ï* üí¨\n\n"
        f"*ID –ø–æ—Å—Ç–∞:* {post_id}\n"
        f"*–ê–≤—Ç–æ—Ä ID:* {author_id}\n"
        f"*–ó–∞–≥–æ–ª–æ–≤–æ–∫:* {title}\n"
        f"*–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:*\n```
{short_content}
```\n"
        f"*–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç:* {url}"
    )
    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(
                f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage",
                json={
                    "chat_id": TELEGRAM_CHAT_ID,
                    "text": message,
                    "parse_mode": "Markdown"
                }
            )
            telegram_result = response.json()
            if not telegram_result.get("ok", False):
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {telegram_result}")
                return False
            logger.info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ—Å—Ç–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram: {str(e)}")
        return False 